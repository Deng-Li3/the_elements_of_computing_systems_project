// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor.  
 * out = a if sel==000
 *       b if sel==001
 *       etc.
 *       h if sel==111
 */


CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Not(in=sel[0], out=nots0);
    Not(in=sel[1], out=nots1);
    Not(in=sel[2], out=nots2);

    And(a=nots0, b=nots1, out=t0);
    And(a=t0, b=nots2, out=w0);

    And(a=sel[0], b=nots1, out=t1);
    And(a=t1, b=nots2, out=w1);

    And(a=nots0, b=sel[1], out=t2);
    And(a=t2, b=nots2, out=w2);

    And(a=sel[0], b=sel[1], out=t3);
    And(a=t3, b=nots2, out=w3);

    And(a=nots0, b=nots1, out=t4);
    And(a=t4, b=sel[2], out=w4);

    And(a=sel[0], b=nots1, out=t5);
    And(a=t5, b=sel[2], out=w5);

    And(a=nots0, b=sel[1], out=t6);
    And(a=t6, b=sel[2], out=w6);

    And(a=sel[0], b=sel[1], out=t7);
    And(a=t7, b=sel[2], out=w7);

    /* Construct 16 bit weights */
    Mux16(a[0..15]=false, b[0..15]=true, sel=w0, out[0..15]=wa);
    Mux16(a[0..15]=false, b[0..15]=true, sel=w1, out[0..15]=wb);
    Mux16(a[0..15]=false, b[0..15]=true, sel=w2, out[0..15]=wc);
    Mux16(a[0..15]=false, b[0..15]=true, sel=w3, out[0..15]=wd);
    Mux16(a[0..15]=false, b[0..15]=true, sel=w4, out[0..15]=we);
    Mux16(a[0..15]=false, b[0..15]=true, sel=w5, out[0..15]=wf);
    Mux16(a[0..15]=false, b[0..15]=true, sel=w6, out[0..15]=wg);
    Mux16(a[0..15]=false, b[0..15]=true, sel=w7, out[0..15]=wh);

    And16(a[0..15]=a, b[0..15]=wa, out[0..15]=va);
    And16(a[0..15]=b, b[0..15]=wb, out[0..15]=vb);
    And16(a[0..15]=c, b[0..15]=wc, out[0..15]=vc);
    And16(a[0..15]=d, b[0..15]=wd, out[0..15]=vd);
    And16(a[0..15]=e, b[0..15]=we, out[0..15]=ve);
    And16(a[0..15]=f, b[0..15]=wf, out[0..15]=vf);
    And16(a[0..15]=g, b[0..15]=wg, out[0..15]=vg);
    And16(a[0..15]=h, b[0..15]=wh, out[0..15]=vh);

    Or16(a[0..15]=va, b[0..15]=vb, out[0..15]=v0);
    Or16(a[0..15]=vc, b[0..15]=vd, out[0..15]=v1);
    Or16(a[0..15]=ve, b[0..15]=vf, out[0..15]=v2);
    Or16(a[0..15]=vg, b[0..15]=vh, out[0..15]=v3);

    Or16(a[0..15]=v0, b[0..15]=v1, out[0..15]=v4);
    Or16(a[0..15]=v2, b[0..15]=v3, out[0..15]=v5);

    Or16(a[0..15]=v4, b[0..15]=v5, out[0..15]=out);
}
