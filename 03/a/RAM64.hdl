// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way16(in=in, sel=address[3..5], a=in0, b=in1, c=in2, d=in3, e=in4, f=in5, g=in6, h=in7);
    DMux8Way(in=load, sel=address[3..5], a=l0, b=l1, c=l2, d=l3, e=l4, f=l5, g=l6, h=l7);
    Mux8Way16(a=ou0, b=ou1, c=ou2, d=ou3, e=ou4, f=ou5, g=ou6, h=ou7, sel=address[3..5], out=out);

    RAM8(in=in0, load=l0, address=address[0..2], out=ou0);
    RAM8(in=in1, load=l1, address=address[0..2], out=ou1);
    RAM8(in=in2, load=l2, address=address[0..2], out=ou2);
    RAM8(in=in3, load=l3, address=address[0..2], out=ou3);
    RAM8(in=in4, load=l4, address=address[0..2], out=ou4);
    RAM8(in=in5, load=l5, address=address[0..2], out=ou5);
    RAM8(in=in6, load=l6, address=address[0..2], out=ou6);
    RAM8(in=in7, load=l7, address=address[0..2], out=ou7);
}
